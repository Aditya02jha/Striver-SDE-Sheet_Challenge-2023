class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        //sort
        sort(intervals.begin() , intervals.end());
        
        
        int n = intervals.size();
        vector<vector<int>>ans;
        int first = intervals[0][0];
        int sec = intervals[0][1];
        
        for(int i = 0 ; i<n-1 ; i++){
            
            //does not overlap. we have to change first and second and push back the range;
            if(sec < intervals[i+1][0]){
                ans.push_back({first , sec});
                
                first = intervals[i+1][0];
            }
            // check for max at every step;
            sec = max(sec , intervals [i+1][1]);
        }
        //now insert the last element;
        ans.push_back({first , sec});
        
        return ans;
    }
};