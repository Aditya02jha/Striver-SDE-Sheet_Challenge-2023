class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>ans;
        sort(nums.begin() , nums.end());
        set<vector<int>>set;
        int n = nums.size();
        for(int i=0;i<n-3;i++){
            for(int j = i+1;j<n-2;j++){
                long long new_tar = (long long)target - (long long)nums[i] - (long long)nums[j];
                int low = j+1 , high = n-1;
                while(low < high){
                    if(nums[low] + nums[high] < new_tar){
                        low++;
                    }
                    else if(nums[low] + nums[high] > new_tar){
                        high--;
                    }
                    else{
                        set.insert({nums[i] , nums[j] , nums[low] , nums[high]});
                        low++;
                        high--;
                    }
                }
            }
        }
        for(auto x:set){
            ans.push_back(x);
        }

        return ans;
    }
};