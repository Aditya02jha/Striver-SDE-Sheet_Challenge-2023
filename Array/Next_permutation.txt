class Solution {
public:
    void nextPermutation(vector<int>& nums) {
       int n = nums.size();
       int break_point = n-1;
        bool flag = false;
       //find the break point: break point is the point at which the streak of ascending breaks, atstarting form last.

       for(int i=n-2;i>=0;i--){
           if(nums[i] < nums[i+1]){
               break_point = i;
               flag = true;
               break;
           }
       }
       // if the whole array is in descending order then reverse the array.
       if(break_point < 0 || flag == false){
           reverse(nums.begin() , nums.end());
           return;
       }

        for(int i = n-1 ; i>break_point ;i--){
            if(nums[break_point] < nums[i]){
                swap(nums[break_point] , nums[i]);
                break;
            }
        }

        reverse(nums.begin() + break_point+1 , nums.end());

    }
};